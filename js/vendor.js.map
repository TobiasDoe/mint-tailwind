{"version":3,"sources":["webpack://mint/./node_modules/vue/dist/vue.esm-bundler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+C;AACuC;AACrD;AACW;AAC4B;;AAExE;AACA;AACA,QAAQ,qEAAmB;AAC3B;AACA;;AAEA;AACA,KAAK,IAAqC;AAC1C;AACA;AACA;AACA;AACA,SAAS,qDAAQ;AACjB;AACA;AACA;AACA;AACA,aAAa,KAAqC,KAAK,sDAAI;AAC3D,mBAAmB,6CAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAqC;AAClD,YAAY,sDAAI,4CAA4C,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO,GAAG,0DAAO,WAAW,mDAAM;AAC7C;AACA;AACA,iBAAiB,IAAqC;AACtD,+DAA+D,YAAY;AAC3E;AACA,oBAAoB,8DAAiB;AACrC,gBAAgB,sDAAI,gBAAgB,QAAQ,IAAI,UAAU;AAC1D;AACA,iBAAiB,EAGJ;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8CAA8C,6CAAU;AACxD;AACA;AACA;AACA,yEAAuB;;AAEiB","file":"/js/vendor.js","sourcesContent":["import * as runtimeDom from '@vue/runtime-dom';\nimport { initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { compile } from '@vue/compiler-dom';\nimport { isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\n\nfunction initDev() {\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry is the \"full-build\" that includes both the runtime\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    initDev();\r\n}\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\r\n            return NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if ((process.env.NODE_ENV !== 'production') && !el) {\r\n            warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const { code } = compile(template, extend({\r\n        hoistStatic: true,\r\n        onError(err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const message = `Template compilation error: ${err.message}`;\r\n                const codeFrame = err.loc &&\r\n                    generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n                warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                /* istanbul ignore next */\r\n                throw err;\r\n            }\r\n        }\r\n    }, options));\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = (new Function('Vue', code)(runtimeDom));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n"],"sourceRoot":""}